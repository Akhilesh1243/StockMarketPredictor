# -*- coding: utf-8 -*-
"""Stockmarketpredict.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u13TxKcVGFEigxKa-DxsoRm0oTVe5B3b
"""

!pip list

!pip install python-dotenv

!pip install finnhub-python
import finnhub

# Create the .env file with your Finnhub API token
with open(".env", "w") as f:
    f.write("FINNHUB_API_TOKEN=csdi5q1r01qi0n6epsq0csdi5q1r01qi0n6epsqg")

# Load and use the .env file
from dotenv import load_dotenv
import os

load_dotenv()  # Load the .env file

# Access the API token from the environment
api_token = os.getenv('FINNHUB_API_TOKEN')
print(f"API Token: {api_token}")

# Your additional code goes here, for example, WebSocket usage

import os
from dotenv import load_dotenv

load_dotenv()
api_token = os.getenv('FINNHUB_API_TOKEN') # CHANGED: csdi5q1r01qi0n6epsq0csdi5q1r01qi0n6epsqg -> FINNHUB_API_TOKEN
print(f"API Token: {api_token}")  # Verify that the token is loaded correctly

import websocket
import threading
import time

# WebSocket callback functions
def on_message(ws, message):
    print("Received message:", message)

def on_error(ws, error):
    print("Error occurred:", error)

def on_close(ws, close_status_code, close_msg):
    print(f"WebSocket closed with code {close_status_code} and message: {close_msg}")

def on_open(ws):
    ws.send('{"type":"subscribe","symbol":"BINANCE:BTCUSDT"}')

# Create the WebSocketApp instance globally
ws_app = None

# Start the WebSocket in a separate thread
def start_websocket():
    global ws_app  # Store the instance globally
    websocket.enableTrace(False) # CHANGED: Added tracing
    ws_app = websocket.WebSocketApp("wss://ws.finnhub.io?token=csdjlihr01qi0n6eqbhgcsdjlihr01qi0n6eqbi0", # CHANGED: api_token variable was missing
                                    on_message=on_message,
                                    on_error=on_error,
                                    on_close=on_close)
    ws_app.on_open = on_open
    ws_app.run_forever()

# Run WebSocket for a specified timeout
def run_with_timeout(timeout):
    ws_thread = threading.Thread(target=start_websocket)
    ws_thread.start()

    # Let the WebSocket run for a set amount of time
    time.sleep(timeout)

    # Close the WebSocket connection properly
    if ws_app:
        print(f"Stopping WebSocket after {timeout} seconds.")
        ws_app.close()

# Run the WebSocket for 10 seconds
run_with_timeout(15)

finnhub_client = finnhub.Client(api_key="csdjlihr01qi0n6eqbhgcsdjlihr01qi0n6eqbi0")

print(finnhub_client.company_basic_financials('LULU', 'all'))

print(finnhub_client.company_peers('LULU'))

